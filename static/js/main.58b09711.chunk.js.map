{"version":3,"sources":["comps/LoopPreview.jsx","comps/LoopsList.jsx","comps/Controls.jsx","assets/audio/Bass Warwick heavy funk groove on E 120 BPM.mp3","assets/audio/electric guitar coutry slide 120bpm - B.mp3","assets/audio/120_future_funk_beats_25.mp3","assets/audio/GrooveB_120bpm_Tanggu.mp3","assets/audio/PAS3GROOVE1.03B.mp3","assets/audio/SilentStar_120_Em_OrganSynth.mp3","assets/audio/FUD_120_StompySlosh.mp3","assets/audio/120_stutter_breakbeats_16.mp3","assets/audio/MazePolitics_120_Perc.mp3","services/loopsService.js","comps/LoopFilesDisplay.jsx","pages/Home.jsx","hooks/useInterval.js","App.jsx","reportWebVitals.js","index.js"],"names":["LoopPreview","handleClick","loop","className","isSelected","onClick","id","name","LoopsList","loops","map","idx","Controls","controls","control","action","isActive","func","loopsService","getLoops","loopsNames","audioFile","fileName","audio","Audio","bass_warwick","electric_guitar","future_funk","groove_b","maze_politics","pas_3_groove","silent_star","stompy_slosh","stutter_breakbeats","LoopFilesDisplay","selected","filter","isSelectedFound","length","Home","useState","setLoops","isPlaying","setIsPlaying","isRecording","setIsRecording","isPlayingRecorded","setIsPlayingRecorded","recordedInfo","setRecordedInfo","useEffect","_loops","toggleLoopsPlay","callback","delay","savedCallback","useRef","current","intervalId","setInterval","clearInterval","useInterval","renderState","timeBetweenStates","stateToRender","endTime","startTime","prevRecordedInfo","timer","now","Date","getTime","forEach","controlAudio","actions","includes","Error","pause","currentTime","play","some","console","log","_id","updatedLoops","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58b09711.chunk.js","sourcesContent":["export const LoopPreview = ({ handleClick, loop }) => {\r\n    return (\r\n      <div\r\n        className={`btn loop-square ${loop.isSelected ? \"active\" : \"\"}`}\r\n        onClick={() => handleClick(loop.id)}\r\n      >\r\n        {loop.name}\r\n      </div>\r\n    );\r\n  };\r\n  ","import { LoopPreview } from \"./LoopPreview\";\r\n\r\nexport const LoopsList = ({ loops, handleClick }) => {\r\n  return (\r\n    <div className=\"loops-list\">\r\n      {loops.map((loop, idx) => (\r\n        <LoopPreview loop={loop} key={idx} handleClick={handleClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","export function Controls({controls}){\r\n    return(\r\n        <div className=\"controls\">\r\n        {controls.map((control, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`control-btn-container ${control.action} ${\r\n              control.isActive ? \"active\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\"btn\" onClick={control.func}></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/120_future_funk_beats_25.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","import bass_warwick from \"../assets/audio/Bass Warwick heavy funk groove on E 120 BPM.mp3\"\r\nimport electric_guitar from \"../assets/audio/electric guitar coutry slide 120bpm - B.mp3\";\r\nimport future_funk from \"../assets/audio/120_future_funk_beats_25.mp3\";\r\nimport groove_b from \"../assets/audio/GrooveB_120bpm_Tanggu.mp3\";\r\nimport pas_3_groove from \"../assets/audio/PAS3GROOVE1.03B.mp3\";\r\nimport silent_star from \"../assets/audio/SilentStar_120_Em_OrganSynth.mp3\";\r\nimport stompy_slosh from \"../assets/audio/FUD_120_StompySlosh.mp3\";\r\nimport stutter_breakbeats from \"../assets/audio/120_stutter_breakbeats_16.mp3\";\r\nimport maze_politics from \"../assets/audio/MazePolitics_120_Perc.mp3\";\r\n\r\nexport const loopsService = {\r\n  getLoops,\r\n};\r\n\r\nconst loopsNames = [\r\n  {\r\n    name: \"Bass Warwick\",\r\n    audioFile: bass_warwick,\r\n    fileName: \"Bass Warwick heavy funk groove on E 120 BPM.mp3\",\r\n  },\r\n  {\r\n    name: \"Electric Guitar\",\r\n    audioFile: electric_guitar,\r\n    fileName: \"electric guitar coutry slide 120bpm - B.mp3\",\r\n  },\r\n  {\r\n    name: \"Future Funk\",\r\n    audioFile: future_funk,\r\n    fileName: \"120_future_funk_beats_25.mp3\",\r\n  },\r\n  {\r\n    name: \"Groove B\",\r\n    audioFile: groove_b,\r\n    fileName: \"GrooveB_120bpm_Tanggu.mp3\",\r\n  },\r\n  {\r\n    name: \"Maze Politics\",\r\n    audioFile: maze_politics,\r\n    fileName: \"MazePolitics_120_Perc.mp3\",\r\n  },\r\n  {\r\n    name: \"Pas 3 Groove\",\r\n    audioFile: pas_3_groove,\r\n    fileName: \"PAS3GROOVE1.03B.mp3\",\r\n  },\r\n  {\r\n    name: \"Silent Star\",\r\n    audioFile: silent_star,\r\n    fileName: \"SilentStar_120_Em_OrganSynth.mp3\",\r\n  },\r\n  {\r\n    name: \"Stompy Slosh\",\r\n    audioFile: stompy_slosh,\r\n    fileName: \"FUD_120_StompySlosh.mp3\",\r\n  },\r\n  {\r\n    name: \"Stutter Breakbeats\",\r\n    audioFile: stutter_breakbeats,\r\n    fileName: \"120_stutter_breakbeats_16.mp3\",\r\n  },\r\n];\r\n\r\nfunction getLoops() {\r\n  return loopsNames.map(({ name, audioFile, fileName }, idx) => {\r\n    return {\r\n      name,\r\n      fileName,\r\n      id: `${idx}_${name}`,\r\n      isSelected: false,\r\n      audio: new Audio(audioFile),\r\n    };\r\n  });\r\n}\r\n","export function LoopFilesDisplay({ loops }) {\r\n    const selected = loops.filter(({ isSelected }) => isSelected)\r\n    const isSelectedFound = selected.length !== 0;\r\n    return (\r\n      <div className=\"loop-files-display-container\">\r\n        <div className=\"title\">Selected Loops Files:</div>\r\n        {isSelectedFound && (\r\n          <ul className=\"selected-loop-files-list\">\r\n            {selected.map((loop, idx) => (\r\n              <li key={idx} className=\"file-name\">\r\n                {loop.fileName}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {!isSelectedFound && <div className='not-selected'>No Loops Selected</div>}\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useState, useEffect} from \"react\";\r\nimport { useInterval } from \"../hooks/useInterval.js\";\r\nimport { LoopsList } from \"../comps/LoopsList.jsx\";\r\nimport { Controls } from \"../comps/Controls.jsx\";\r\nimport { loopsService } from \"../services/loopsService.js\";\r\nimport { LoopFilesDisplay } from \"../comps/LoopFilesDisplay.jsx\";\r\n\r\nconst DELAY = 8000;\r\n\r\nexport const Home = () => {\r\n  const [loops, setLoops] = useState([]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isPlayingRecorded, setIsPlayingRecorded] = useState(false);\r\n  const [recordedInfo, setRecordedInfo] = useState([]);\r\n\r\n  //runs when component is mounted only\r\n  useEffect(() => {\r\n    //get the loops from loopService and set loops\r\n    const _loops = loopsService.getLoops();\r\n    setLoops(_loops);\r\n  }, []);\r\n\r\n  // runs when component mounts and when play/stop buttons are clicked\r\n  useEffect(() => {\r\n    toggleLoopsPlay(); //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isPlaying]);\r\n\r\n  // custom hook to handle setInterval. this hook make sure the 8 seconds\r\n  // audio files will repeat playing\r\n  useInterval(\r\n    () => {\r\n      toggleLoopsPlay();\r\n    },\r\n    isPlaying ? DELAY : null\r\n  );\r\n\r\n  // this effect is for playing the recorded actions (the bonus)\r\n  // it is not working correctly. it renders all states properly until\r\n  // the last one. i know why but its to late to think of a better solution.\r\n  // i really wanted to render all the steps to the screen and to play the audio.\r\n  // i could have used some external library to record just the audio i guess but chose not to\r\n  // i am leaving it like this at the moment\r\n  useEffect(() => {\r\n    let renderState;\r\n    let timeBetweenStates;\r\n\r\n    if (isPlayingRecorded && recordedInfo.length) {\r\n      const stateToRender = recordedInfo[0];\r\n\r\n      timeBetweenStates = stateToRender.endTime - stateToRender.startTime;\r\n      renderState = () => {\r\n        setLoops(stateToRender.loops);\r\n        setIsPlaying(stateToRender.isPlaying);\r\n        setRecordedInfo((prevRecordedInfo) => {\r\n          const [first, ...rest] = prevRecordedInfo;\r\n          return rest;\r\n        });\r\n      };\r\n\r\n      const timer = setInterval(() => {\r\n        renderState();\r\n      }, timeBetweenStates);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [isPlayingRecorded, recordedInfo]);\r\n\r\n  useEffect(() => {\r\n    // this effect wont take place unless we started recording\r\n    // which means in this effect, recordedInfo is updated with only the\r\n    // actions that comes after clicking record button\r\n\r\n    if (isRecording) {\r\n      setRecordedInfo((prevRecordedInfo) => {\r\n        const now = new Date().getTime();\r\n        const lastIndex = prevRecordedInfo.length - 1;\r\n        // updating the endTime prop for the last info(the state to render) to now\r\n        prevRecordedInfo[lastIndex].endTime = now;\r\n        return [\r\n          ...prevRecordedInfo,\r\n          // adding the new info and setting its startTime to now\r\n          { loops, isPlaying, startTime: now },\r\n        ];\r\n      });\r\n    }\r\n  }, [isRecording, isPlaying, loops]);\r\n\r\n  // according to isPlaying state, toggle audio object property of paused by calling functions play/pause.\r\n  // this action is done for each loop which is checked.\r\n  // paused property automatically set to true once the audio track length is done (8 seconds in our case)\r\n  // this is why this function will also be called inside useInterval hook\r\n  const toggleLoopsPlay = () => {\r\n    loops.forEach((loop) => {\r\n      if (loop.isSelected) {\r\n        isPlaying\r\n          ? controlAudio(loop.audio, \"play\")\r\n          : controlAudio(loop.audio, \"pause\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // pause or play an audio object\r\n  const controlAudio = (audio, action = \"pause\") => {\r\n    const actions = [\"play\", \"pause\"];\r\n    if (!actions.includes(action)) {\r\n      throw new Error(`action can only be of values: ${actions}`);\r\n    }\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n    if (action === \"play\") audio.play();\r\n  };\r\n\r\n  // called when a loop is being clicked\r\n  const handleClick = (_id) => {\r\n    const updatedLoops = loops.map((loop) => {\r\n      if (loop.id === _id && loop.isSelected) {\r\n        controlAudio(loop.audio, \"pause\");\r\n      }\r\n      return loop.id === _id ? { ...loop, isSelected: !loop.isSelected } : loop;\r\n    });\r\n    setLoops(updatedLoops);\r\n  };\r\n\r\n  const initLoopsPlay = () => {\r\n    if (isPlaying) return;\r\n    if (loops.some(({ isSelected }) => isSelected)) {\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const stopLoopsPlay = () => {\r\n    if (!isPlaying) return;\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const recordSession = () => {\r\n    setRecordedInfo((prevRecordedInfo) => {\r\n      // set recorded info for the time when first clicking record\r\n      if (!prevRecordedInfo.length) {\r\n        console.log(\"start recording\");\r\n        return [\r\n          ...prevRecordedInfo,\r\n          { loops, isPlaying, startTime: new Date().getTime(), endTime: null },\r\n        ];\r\n      } else {\r\n        console.log(\"stop recording\");\r\n        const now = new Date().getTime();\r\n        const lastIndex = prevRecordedInfo.length - 1;\r\n        prevRecordedInfo[lastIndex].endTime = now;\r\n        // prevRecordedInfo[lastIndex].last = true;\r\n        return [...prevRecordedInfo];\r\n      }\r\n    });\r\n\r\n    // set is recording to call the effect that deals with the recording\r\n    setIsRecording(!isRecording);\r\n  };\r\n\r\n  // will be called when clicking play recorded button\r\n  const playRecordedSession = () => {\r\n    setIsPlaying(false);\r\n    setIsPlayingRecorded(!isPlayingRecorded);\r\n  };\r\n\r\n  const controls = [\r\n    {\r\n      action: \"play\",\r\n      func: initLoopsPlay,\r\n      isActive: isPlaying && !isPlayingRecorded,\r\n    },\r\n    { action: \"stop\", func: stopLoopsPlay, isActive: !isPlaying },\r\n    { action: \"record\", func: recordSession, isActive: isRecording },\r\n    {\r\n      action: \"play_recording\",\r\n      func: playRecordedSession,\r\n      isActive: isPlayingRecorded,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"loop-machine-container\">\r\n        <h1 className=\"loop-machine-title\">Loop Machine</h1>\r\n        {loops && (\r\n          <div className=\"control-panel\">\r\n            <LoopsList loops={loops} handleClick={handleClick} />\r\n            <div className=\"controls-info-container\">\r\n              <Controls controls={controls} />\r\n              <LoopFilesDisplay loops={loops} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import {useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function runCallback() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let intervalId = setInterval(runCallback, delay);\r\n      return () => clearInterval(intervalId);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { Home } from \"../src/pages/Home.jsx\";\r\n\r\nexport function App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {App} from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport \"./assets/scss/global.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}